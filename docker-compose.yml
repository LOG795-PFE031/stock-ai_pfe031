services:
  stock-ai:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stock-ai
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - /app/__pycache__
      - ./logs:/app/logs
      - ./data:/app/data
      - ./models:/app/models
      - ./mlruns:/app/mlruns
      - ./scalers:/app/scalers
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
      - API_HOST=0.0.0.0
      - API_PORT=8000
    networks:
      - microservices_auth
    restart: on-failure:3
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  monitor:
    build:
      context: .
      dockerfile: tests/Dockerfile.monitor
    container_name: stock-ai-monitor
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
    networks:
      - microservices_auth
    depends_on:
      - stock-ai

  prometheus:
    image: prom/prometheus
    container_name: stock-ai-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - microservices_auth
    depends_on:
      - stock-ai

  grafana:
    image: grafana/grafana
    container_name: stock-ai-grafana
    ports:
      - "3000:3000"
    volumes:
      # persist Grafana DB, plugins, etc.
      - ./monitoring/grafana:/var/lib/grafana
      # provisioning folder (YAML), it imports all those JSONs automatically every few sec and where to find them.
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - microservices_auth
    depends_on:
      - prometheus

networks:
  microservices_auth:
    external: true
    name: microservices_auth
